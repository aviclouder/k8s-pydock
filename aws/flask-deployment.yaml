apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      # initContainers:
      #   - name: wait-for-mysql
      #     image: mysql:latest  # Or any minimal image with mysql CLI
      #     command: ["sh", "-c", "until mysqladmin ping -h flask-mysql --silent; do sleep 2; done"]
      containers:
        - name: flask
          image: avinshar/pydock:env  # Build this image before deploying
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "100m"
              memory: "200M"
            limits:
              cpu: "200m"
              memory: "400M"
          env:
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_HOST
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PORT
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DB


---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  selector:
    app: flask
  ports:
    - protocol: TCP
      port: 8000  
      targetPort: 8000
  type: ClusterIP  # Exposes service on a high-numbered port
